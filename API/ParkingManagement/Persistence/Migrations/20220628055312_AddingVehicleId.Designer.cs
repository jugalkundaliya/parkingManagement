// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ParkingManagementContext))]
    [Migration("20220628055312_AddingVehicleId")]
    partial class AddingVehicleId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Persistence.DataModel.BillChargesData", b =>
                {
                    b.Property<Guid>("BillChargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChargeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ChargedAmount")
                        .HasColumnType("float");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.HasKey("BillChargeId");

                    b.HasIndex("ChargeId");

                    b.HasIndex("BillId", "ChargeId")
                        .IsUnique();

                    b.ToTable("BillCharges");
                });

            modelBuilder.Entity("Persistence.DataModel.BillsData", b =>
                {
                    b.Property<Guid>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AllottingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SpotVehicleRelationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TotalBillableHours")
                        .HasColumnType("int");

                    b.Property<double?>("TotalCharges")
                        .HasColumnType("float");

                    b.HasKey("BillId");

                    b.HasIndex("SpotVehicleRelationId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Persistence.DataModel.ChargesData", b =>
                {
                    b.Property<Guid>("ChargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChargeDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ChargeValue")
                        .HasColumnType("float");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChargeId");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("Persistence.DataModel.FinancialStatementsData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountGained")
                        .HasColumnType("float");

                    b.Property<double>("AmountSpent")
                        .HasColumnType("float");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FinancialStatements");
                });

            modelBuilder.Entity("Persistence.DataModel.ParkingSpotData", b =>
                {
                    b.Property<Guid>("ParkingSpotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SpotNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParkingSpotId");

                    b.ToTable("ParkingSpots");
                });

            modelBuilder.Entity("Persistence.DataModel.SpotVehicleRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParkingSpotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.HasIndex("ParkingSpotId", "VehicleId")
                        .IsUnique();

                    b.ToTable("SpotVehicleRelations");
                });

            modelBuilder.Entity("Persistence.DataModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserCredentials");
                });

            modelBuilder.Entity("Persistence.DataModel.VehiclesData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Persistence.DataModel.BillChargesData", b =>
                {
                    b.HasOne("Persistence.DataModel.BillsData", "Bill")
                        .WithMany("BillCharges")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.DataModel.ChargesData", "Charge")
                        .WithMany()
                        .HasForeignKey("ChargeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Charge");
                });

            modelBuilder.Entity("Persistence.DataModel.BillsData", b =>
                {
                    b.HasOne("Persistence.DataModel.SpotVehicleRelation", "SpotVehicleRelation")
                        .WithMany("Bills")
                        .HasForeignKey("SpotVehicleRelationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpotVehicleRelation");
                });

            modelBuilder.Entity("Persistence.DataModel.SpotVehicleRelation", b =>
                {
                    b.HasOne("Persistence.DataModel.ParkingSpotData", "ParkingSpot")
                        .WithMany("SpotVehicleRelations")
                        .HasForeignKey("ParkingSpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.DataModel.VehiclesData", "Vehicle")
                        .WithMany("SpotVehicleRelations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingSpot");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Persistence.DataModel.BillsData", b =>
                {
                    b.Navigation("BillCharges");
                });

            modelBuilder.Entity("Persistence.DataModel.ParkingSpotData", b =>
                {
                    b.Navigation("SpotVehicleRelations");
                });

            modelBuilder.Entity("Persistence.DataModel.SpotVehicleRelation", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Persistence.DataModel.VehiclesData", b =>
                {
                    b.Navigation("SpotVehicleRelations");
                });
#pragma warning restore 612, 618
        }
    }
}
